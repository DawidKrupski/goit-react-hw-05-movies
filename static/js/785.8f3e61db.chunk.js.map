{"version":3,"file":"static/js/785.8f3e61db.chunk.js","mappings":"yNAgCA,UA5BgB,WACd,IAAQA,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,mCAAG,qGACJC,EAAAA,EAAAA,IAAgBP,GADZ,OACjBQ,EADiB,OAEvBJ,EAAgBI,GAFO,2CAAH,qDAItBF,GACD,GAAE,CAACN,KAGF,wBACGG,EAAaM,OAAS,EACrBN,EAAaO,KAAI,SAAAC,GAAO,OACtB,2BACE,qCAAaA,EAAQC,WACrB,uBAAID,EAAQE,YAFLF,EAAQG,GADK,KAOxB,oEAIP,C","sources":["components/Reviews/Reviews.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'components/App';\n\nconst Reviews = () => {\n  const { moviesId } = useParams();\n  const [movieReviews, setMovieReviews] = useState([]);\n\n  useEffect(() => {\n    const handleGetReviews = async () => {\n      const data = await getMovieReviews(moviesId);\n      setMovieReviews(data);\n    };\n    handleGetReviews();\n  }, [moviesId]);\n\n  return (\n    <ul>\n      {movieReviews.length > 0 ? (\n        movieReviews.map(reviews => (\n          <li key={reviews.id}>\n            <h3>Author: {reviews.author}</h3>\n            <p>{reviews.content}</p>\n          </li>\n        ))\n      ) : (\n        <p>We dont have any reviews for this movie</p>\n      )}\n    </ul>\n  );\n};\n\nexport default Reviews;\n"],"names":["moviesId","useParams","useState","movieReviews","setMovieReviews","useEffect","handleGetReviews","getMovieReviews","data","length","map","reviews","author","content","id"],"sourceRoot":""}
{"version":3,"file":"static/js/785.373c6fcf.chunk.js","mappings":"kOAwCA,UAlCgB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACTC,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,mCAAG,+FACjBC,EADiB,6CAC2BP,EAD3B,4BACuDD,EADvD,mCAEAS,EAAAA,EAAAA,IAAUD,GAFV,OAEjBE,EAFiB,OAGjBC,EAAOD,EAASC,KAAKC,QAC3BP,EAAgBM,GAJO,2CAAH,qDAMtBJ,GACD,GAAE,CAACN,EAAUD,KAGZ,wBACGI,EAAaS,OAAS,EACrBT,EAAaU,KAAI,SAAAC,GAAO,OACtB,2BACE,qCAAaA,EAAQC,WACrB,uBAAID,EAAQE,aAFLC,EAAAA,EAAAA,MADa,KAOxB,oEAIP,C","sources":["components/Reviews/Reviews.js"],"sourcesContent":["import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { nanoid } from 'nanoid';\nimport PropTypes from 'prop-types';\n\nconst Reviews = ({ ApiKey }) => {\n  const { moviesId } = useParams();\n  const [movieReviews, setMovieReviews] = useState([]);\n\n  useEffect(() => {\n    const handleGetReviews = async () => {\n      const url = `https://api.themoviedb.org/3/movie/${moviesId}/reviews?api_key=${ApiKey}&language=en-US&page=1`;\n      const response = await axios.get(url);\n      const data = response.data.results;\n      setMovieReviews(data);\n    };\n    handleGetReviews();\n  }, [moviesId, ApiKey]);\n\n  return (\n    <ul>\n      {movieReviews.length > 0 ? (\n        movieReviews.map(reviews => (\n          <li key={nanoid()}>\n            <h3>Author: {reviews.author}</h3>\n            <p>{reviews.content}</p>\n          </li>\n        ))\n      ) : (\n        <p>We dont have any reviews for this movie</p>\n      )}\n    </ul>\n  );\n};\n\nReviews.propTypes = {\n  ApiKey: PropTypes.string.isRequired,\n};\n\nexport default Reviews;\n"],"names":["ApiKey","moviesId","useParams","useState","movieReviews","setMovieReviews","useEffect","handleGetReviews","url","axios","response","data","results","length","map","reviews","author","content","nanoid"],"sourceRoot":""}
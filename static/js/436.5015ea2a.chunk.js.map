{"version":3,"file":"static/js/436.5015ea2a.chunk.js","mappings":"8PAGaA,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,iCACE,4CACA,wBACGF,GACCA,EAAOG,KAAI,SAAAC,GAAK,OACd,SAAC,KAAD,CACEC,GAAE,kBAAaD,EAAME,IACrBC,MAAO,CAAEC,KAAMP,GAFjB,SAKGG,EAAMK,OACL,yBACE,wBAAKL,EAAMK,UAEX,MANCL,EAAME,GAJC,QAgBzB,E,SCLD,EAlBa,WACX,OAA4BI,EAAAA,EAAAA,UAAS,IAArC,eAAOV,EAAP,KAAeW,EAAf,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,qGACHC,EAAAA,EAAAA,MADG,OAChBC,EADgB,OAEtBJ,EAAUI,EAAKC,SAFO,2CAAH,qDAIrBH,GACD,GAAE,KAGD,0BACE,SAACd,EAAD,CAAWC,OAAQA,KAGxB,C","sources":["components/MovieList/MovieList.js","pages/Home/Home.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <h1>Tranding today</h1>\n      <ul>\n        {movies &&\n          movies.map(movie => (\n            <Link\n              to={`/movies/${movie.id}`}\n              state={{ from: location }}\n              key={movie.id}\n            >\n              {movie.title ? (\n                <li>\n                  <h3>{movie.title}</h3>\n                </li>\n              ) : null}\n            </Link>\n          ))}\n      </ul>\n    </>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n    })\n  ).isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { getPopularMovies } from 'components/App';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const handleGetMovies = async () => {\n      const data = await getPopularMovies();\n      setMovies(data.results);\n    };\n    handleGetMovies();\n  }, []);\n\n  return (\n    <div>\n      <MovieList movies={movies} />\n    </div>\n  );\n};\n\nexport default Home;\n"],"names":["MovieList","movies","location","useLocation","map","movie","to","id","state","from","title","useState","setMovies","useEffect","handleGetMovies","getPopularMovies","data","results"],"sourceRoot":""}
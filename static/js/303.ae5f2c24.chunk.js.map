{"version":3,"file":"static/js/303.ae5f2c24.chunk.js","mappings":"8SAEMA,EAAU,gCACVC,EAAU,mCAEHC,EAAgB,mCAAG,2GAAOC,EAAP,+BAAc,EACtCC,EADwB,UACfJ,EADe,iCACiBC,EADjB,gCACgDE,GADhD,SAEPE,EAAAA,EAAAA,IAAUD,GAFH,cAExBE,EAFwB,yBAGvBA,EAASC,MAHc,2CAAH,qDAMhBC,EAAe,mCAAG,WAAMC,GAAN,gFACvBL,EADuB,UACdJ,EADc,iBACES,EADF,oBACsBR,EADtB,4BAENI,EAAAA,EAAAA,IAAUD,GAFJ,cAEvBE,EAFuB,yBAGtBA,EAASC,MAHa,2CAAH,sDAMfG,EAAe,mCAAG,WAAMD,GAAN,gFACvBL,EADuB,UACdJ,EADc,iBACES,EADF,4BAC8BR,EAD9B,mCAENI,EAAAA,EAAAA,IAAUD,GAFJ,cAEvBE,EAFuB,yBAGtBA,EAASC,KAAKI,SAHQ,2CAAH,sDAMfC,EAAY,mCAAG,WAAMH,GAAN,gFACpBL,EADoB,UACXJ,EADW,iBACKS,EADL,4BACiCR,EADjC,4BAEHI,EAAAA,EAAAA,IAAUD,GAFP,cAEpBE,EAFoB,yBAGnBA,EAASC,KAAKM,MAHK,2CAAH,sDAMZC,EAAc,mCAAG,WAAMC,GAAN,gFACtBX,EADsB,UACbJ,EADa,iCACmBC,EADnB,iCACmDc,EADnD,wCAELV,EAAAA,EAAAA,IAAUD,GAFL,cAEtBE,EAFsB,yBAGrBA,EAASC,KAAKI,SAHO,2CAAH,qD,8IC5B3B,EAAyB,sBAAzB,EAAuD,qBAAvD,EAAwF,yB,kBCyDxF,EApDe,WACb,IAAMK,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOH,EAAP,KAAcM,EAAd,KAEMC,EAAkB,mCAAG,qGACNR,EAAAA,EAAAA,GAAeC,GADT,OACnBR,EADmB,OAEzBa,EAAgBb,GAFS,2CAAH,qDAKlBgB,EAAoB,SAAAC,GACxBH,EAASG,EAAMC,OAAOC,OACH,YAAfF,EAAMG,MAAwC,KAAlBH,EAAMI,SACpCN,GAEH,EAMD,OACE,iBAAKO,UAAWC,EAAhB,WACE,kBACED,UAAWC,EACXH,KAAK,OACLD,MAAOX,EACPgB,SAAUR,EACVS,UAAWT,KAEb,mBAAQM,UAAWC,EAAeG,QAbZ,WACxBX,GACD,EAWG,qBAGA,wBACGH,EAAae,KAAI,SAAAC,GAAK,OACrB,SAAC,KAAD,CACEC,GAAI,CACFC,SAAS,WAAD,OAAaF,EAAMG,IAC3BC,MAAO,CAAEC,KAAMxB,IAHnB,UAOE,yBACE,wBAAKmB,EAAMM,UADJC,EAAAA,EAAAA,SAFJA,EAAAA,EAAAA,MANc,QAgB9B,C,uDCvDM,IAkBIA,EAAS,eAACC,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAACT,EAAIU,GAWvD,OAREV,IAFFU,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGT,GAAE,GAbe,C","sources":["components/Api.js","webpack://react-homework-template/./src/pages/Movie/Movie.module.css?8f7f","pages/Movie/Movies.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '0642b3e039f9cde93a3a88c569e802eb';\n\nexport const getPopularMovies = async (page = 1) => {\n  const url = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${page}`;\n  const response = await axios.get(url);\n  return response.data;\n};\n\nexport const getMovieDetails = async moviesId => {\n  const url = `${API_URL}movie/${moviesId}?api_key=${API_KEY}&language=en-US`;\n  const response = await axios.get(url);\n  return response.data;\n};\n\nexport const getMovieReviews = async moviesId => {\n  const url = `${API_URL}movie/${moviesId}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n  const response = await axios.get(url);\n  return response.data.results;\n};\n\nexport const getMovieCast = async moviesId => {\n  const url = `${API_URL}movie/${moviesId}/credits?api_key=${API_KEY}&language=en-US`;\n  const response = await axios.get(url);\n  return response.data.cast;\n};\n\nexport const getMovieSearch = async query => {\n  const url = `${API_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`;\n  const response = await axios.get(url);\n  return response.data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"search\":\"Movie_search__56kQk\",\"input\":\"Movie_input__GuY5m\",\"searchBtn\":\"Movie_searchBtn__UEUBE\"};","import React, { useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { nanoid } from 'nanoid';\nimport css from './Movie.module.css';\nimport { getMovieSearch } from 'components/Api';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [searchMovies, setSearchMovies] = useState([]);\n  const [query, setQuery] = useState('');\n\n  const handleSearchMovies = async () => {\n    const data = await getMovieSearch(query);\n    setSearchMovies(data);\n  };\n\n  const handleInputChange = event => {\n    setQuery(event.target.value);\n    if (event.type === 'keydown' && event.keyCode === 13) {\n      handleSearchMovies();\n    }\n  };\n\n  const handleButtonClick = () => {\n    handleSearchMovies();\n  };\n\n  return (\n    <div className={css.search}>\n      <input\n        className={css.input}\n        type=\"text\"\n        value={query}\n        onChange={handleInputChange}\n        onKeyDown={handleInputChange}\n      />\n      <button className={css.searchBtn} onClick={handleButtonClick}>\n        Search\n      </button>\n      <ul>\n        {searchMovies.map(movie => (\n          <Link\n            to={{\n              pathname: `/movies/${movie.id}`,\n              state: { from: location },\n            }}\n            key={nanoid()}\n          >\n            <li key={nanoid()}>\n              <h3>{movie.title}</h3>\n            </li>\n          </Link>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["API_URL","API_KEY","getPopularMovies","page","url","axios","response","data","getMovieDetails","moviesId","getMovieReviews","results","getMovieCast","cast","getMovieSearch","query","location","useLocation","useState","searchMovies","setSearchMovies","setQuery","handleSearchMovies","handleInputChange","event","target","value","type","keyCode","className","css","onChange","onKeyDown","onClick","map","movie","to","pathname","id","state","from","title","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}